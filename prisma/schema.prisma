// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model ImageSizes {
  id             String        @id @default(cuid())
  mobileURL      String
  tabletURL      String
  desktopURL     String
  productImageId String?
  productImage   ProductImages? @relation(fields: [productImageId], references: [id])

  categoryImageId String?
  categoryImage   CategoryImages? @relation(fields: [categoryImageId], references: [id])

  @@index([productImageId, categoryImageId])
}

model ProductImages {
  id         String       @id @default(cuid())
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  imageSizes ImageSizes[]
  productId  String
  product    Product      @relation(name: "ProductImagesOnProduct", fields: [productId], references: [id])

  @@index([productId])
}

model CategoryImages {
  id         String       @id @default(cuid())
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  imageSizes ImageSizes[]
  productId  String       @unique
  product    Product      @relation(name: "CategoryImagesOnProduct", fields: [productId], references: [id])

  @@index([productId])
}

model Product {
  id                String           @id @default(cuid())
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  slug              String           @unique
  name              String
  category          String
  new               Boolean          @default(false)
  price             Int
  description       String           @db.Text
  images            ProductImages[]  @relation("ProductImagesOnProduct")
  categoryImages    CategoryImages?  @relation("CategoryImagesOnProduct")
  cartItems         CartItem[]
  ProductCategory   ProductCategory? @relation(fields: [productCategoryId], references: [id])
  productCategoryId String?

  @@index([productCategoryId])
}

model ProductCategory {
  id            String    @id @default(cuid())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  name          String
  categoryImage String?
  description   String    @db.VarChar(255)
  products      Product[]
}

model Cart {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId    String
  cartItems CartItem[]

  @@index([userId])
}

model CartItem {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  quantity  Int

  productId String
  product   Product @relation(fields: [productId], references: [id])

  cartId String
  cart   Cart   @relation(fields: [cartId], references: [id])

  @@id([productId, cartId])
  @@index([productId])
  @@index([cartId])
}
